# Build + publish a single self-contained Windows single-file executable.
# Uses the solution file AvaloniaApplication1.sln at repository root to produce
# a self-contained single-file EXE and upload it as an artifact.
name: Build and publish .NET Desktop (self-contained single-file)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Release]
        runtime: [win-x64]  # change/add win-x86 if you need 32-bit output

    env:
      Solution_Name: AvaloniaApplication1.sln
      CONFIGURATION: ${{ matrix.configuration }}
      RUNTIME: ${{ matrix.runtime }}
      PUBLISH_DIR: ${{ github.workspace }}/artifacts/${{ matrix.runtime }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore
      shell: pwsh
      env:
        SOLUTION: ${{ env.Solution_Name }}
      run: |
        Write-Host "Restoring solution: $Env:SOLUTION"
        dotnet restore "$Env:SOLUTION"

    - name: Publish single-file self-contained executable
      shell: pwsh
      env:
        SOLUTION: ${{ env.Solution_Name }}
        CONFIGURATION: ${{ matrix.configuration }}
        RUNTIME: ${{ matrix.runtime }}
        PUBLISH_DIR: ${{ env.PUBLISH_DIR }}
      run: |
        if (-not (Test-Path -Path $Env:PUBLISH_DIR)) {
          New-Item -ItemType Directory -Path $Env:PUBLISH_DIR | Out-Null
        }

        dotnet publish "$Env:SOLUTION" `
          -c $Env:CONFIGURATION `
          -r $Env:RUNTIME `
          --self-contained true `
          -p:PublishSingleFile=true `
          -p:PublishTrimmed=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -o $Env:PUBLISH_DIR

    - name: Upload publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: published-${{ matrix.runtime }}
        path: ${{ env.PUBLISH_DIR }}
